# -*- org -*-
#+TITLE: Strong First Order Electroweak Phase Transition from a Light Scalar Extension
#+AUTHOR: Isaac R. Wang
#+EMAIL: isaac.wang.us@gmail.com

* Introduction
This is the source code for the paper "First Order Electroweak Phase Transition and Baryogenesis from a Naturally Light Scalar". Most of the plots in this paper are run by the [[file:Combine.nb][Main Mathematica file]] unless specified.

* Table of Contents :TOC:
- [[#introduction][Introduction]]
- [[#model-setup][Model setup]]
  - [[#mass-spectrum-and-parametrization][Mass spectrum and parametrization]]
  - [[#vacuum-stability][Vacuum stability]]
- [[#phase-transition][Phase Transition]]
  - [[#high-temperature-expansion][High-temperature expansion]]
- [[#signals][Signals]]

* Model setup
This section talks about some fundamental features of this new model. The problems talked here are related to new physics at zero temperature.
** Mass spectrum and parametrization
The scalar mass spectrum are calculated in Mathematica code [[file:model_setup/mass_spectrum.nb][mass_spectrum.nb]].
Masses for other relevant particles such as gauge bosons and fermions are trivial, and did not included in any code.

We need to transfer from the bare parameters to observable physical parameters. At tree-level, this process is performed by Mathematica in the same [[file:model_setup/mass_spectrum.nb][code]]. The 1-loop level parametrization is performed for discussing the vacuum stability, in [[file:model_setup/Vacuum_stability_2d.nb][Mathematica code]].
** Vacuum stability
Vacuum stability is discussed at 1-loop level. Potential setup, renormalization and parametrization is performed in [[file:model_setup/Vacuum_stability_2d.nb][Mathematica]].
Tunneling rate is computed with the help of [[https://github.com/rsato64/SimpleBounce][SimpleBounce]].
The code =BP1.cc= to =BP4.cc= are trials for tunneling at the 4 corners of the final combined plot left panel. The result are recorded in the same mathematica file. The code [[file:model_setup/BPeg.cc][BPeg.cc]] is for the benchmark point to generate the tunneling path plot. The [[file:model_setup/BPeg_2.cc][BPeg_2.cc]] is repeatedly used for every data point to generate Figure 8.
* Phase Transition
The phase transition is calculated both semi-analytically using the high-temperature expansion and in full numerical analysis. The [[file:phase_transition/Veff.nb][Mathematica file]] tried the SM case which confirmed that the high-T agrees with the lattice best. In this model it is very similar. This is tried by jupyter notebook but deleted later. For this reason, the high-T expansion is applied in the final result. The [[file:phase_transition/test.ipynb][jupyter notebook]] is used for testing. It's quite a mess right now.
** High-temperature expansion
The high-temperature expansion of the scalar effective potential offers a convenient way to perform analytical computation. The analytical calculation of high-T effective potential are calculated in [[file:phase_transition/highT.nb][Mathematica code]]. Plots can also be find in the same Mathematica code.

Near the boundary where the critical temperature is ill-defined, the critical temperature quickly diverges up and plots suffer from numerical fluctuation.

The data for Fig 1 is generated by [[file:phase_transition/kinetic_profile.py][kinetic_profile.py]]. Plots are made by [[file:phase_transition/profile.nb][mathematica code]].
Fig 2 is scanned by [[file:phase_transition/betaH_curve.py][betaH_curve.py]].
Fig 3 is scanned by [[file:phase_transition/betaH_curve_sameTc.py][betaH_curve_sameTc.py]].
The code [[file:phase_transition/scan2d.py][scan2d.py]] scanned the nucleation temperature, $\beta/H$ for both the 2d case and 1d case at GeV scale.
Fig 4 data comes partially from the [[file:phase_transition/scan2d.py][scan2d.py]], and other for light scalar mass come from [[file:phase_transition/Tn_light.py][Tn_light.py]]. This code scan over parameter space around the boundary of SFOPT.
The MeV range mass in the master plot Fig 5 is scanned in 1d by [[file:phase_transition/Tn_1d_superlight.py][Tn_1d_superlight.py]].

The model is implemented in 2 files, based on [[https://github.com/clwainwright/CosmoTransitions][CosmoTransitions]]. The [[file:phase_transition/light_scalar.py][light_scalar.py]] implements the model with my personal algorithm to find the nucleation temperature.
This runs pretty well at GeV mass range. At smaller masses, the numerical issue becomes more serious, and I use [[file:phase_transition/light_scalar_interpolation.py][light_scalar_interpolation.py]].
This code is based on the previous one, with the solution for nucleation temperature is based on interpolation with tracing bounce action with temperature. (The previous one does not use interpolation). The function to find truevev, tunneling at T, finding nucleation temperature, the $\beta/H$ parameter are all implemented by my own.
This model suffers from numerical issue due to small masses. =CosmoTransitions= sometimes fails to trace the minimum and thus cannot find phase transition.

* Signals
All experimental signals are implemented in the main code, while the data can be found in the folder [[file:probe/][probe]]. Specifically, the GW signal is finished by [[file:phase_transition/GW.nb][GW.nb]], showing that it fails.
